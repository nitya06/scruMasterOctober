package com.neev.userservice

import grails.transaction.Transactional
import com.neev.domain.User
import java.security.MessageDigest
import org.springframework.mail.MailSendException
import org.slf4j.Logger
import org.slf4j.LoggerFactory


class SetForgetPasswordService 
{
    final Logger logger = LoggerFactory.getLogger(SetForgetPasswordService.class)
    
    /*
     *Parameters : email
     *Functionality : generate forgotPassword_token send it to user's mail Id and save the same for future use
     *Return : status (true/false) depending on the status if save
     */
    def setForgetPasswordToken(String email)
    {
        logger.info("Entered into setForgetPasswordToken method of setForgetPasswordService")
        def user = new User()
        user = User.findByEmail(email)
        def temp = new Date()
        def hash = md(email,temp)
        user.forgotPassword_token= hash
        sendMail
        {
            to email
            subject "Forget Password Verification"
            body "http://10.132.160.215:8080/iceScrum/users/newPassword?passwordtoken=${hash}"
        }
        if( user.save() )
        {
            logger.info("Returning true from setForgetPasswordToken method of setForgetPasswordService")
            return true
        }   
        else
        {
            logger.info("Returning false from setForgetPasswordToken method of setForgetPasswordService")
            return false
        }
    }
    
    
    /*
     *Parameters : email and name
     *Functionality : generate the hashcode using md5
     *Return : hash code generated by md5
     */
    def md(def email, def name)
    {
        logger.info("Entered into md method of SetForgotPasswordService")
        def digest = MessageDigest.getInstance("MD5")
        def text = "${email} ${name}"
        def md5hash = new BigInteger(1,digest.digest(text.getBytes())).toString(16).padLeft(32,"0")
        logger.info("Returning md5hash from md method of SetForgetPasswordService")
        return md5hash
    }
}
